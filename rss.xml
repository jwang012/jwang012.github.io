<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://www.anango.cn/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.anango.cn/rss.xml" rel="self" type="application/rss+xml"/>
    <title>安安小小创业训练营</title>
    <link>https://www.anango.cn/</link>
    <description>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Mon, 10 Apr 2023 07:04:45 GMT</pubDate>
    <lastBuildDate>Mon, 10 Apr 2023 07:04:45 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>博客</category>
    <category>头脑驿站</category>
    <category>工具</category>
    <item>
      <title>抛弃 Notion 知识管理软件的尝试：把博客变为知识库</title>
      <link>https://www.anango.cn/posts/2022-08-22-learndata_blog_to_knowledge_management.html</link>
      <guid>https://www.anango.cn/posts/2022-08-22-learndata_blog_to_knowledge_management.html</guid>
      <source url="https://www.anango.cn/rss.xml">抛弃 Notion 知识管理软件的尝试：把博客变为知识库</source>
      <description>知识管理/笔记软件越来越多，Notion、Obsidian、Logseq、Roam Research、Evernote、flomo、为知、飞书、语雀……我总在不同应用间徘徊。直到有一次，我突然醒悟：知识管理软件不是管理知识，而是管理笔记。笔记里的知识并不属于你，只有经过消化、应用，才能成为自己的知识。 这么简单的事，我之前却一直没看透，总是把笔记与知识理解划上了等号。当要用到曾摘录的笔记时，就在各类知识管理软件里翻找，折腾一番才找到需要的笔记，有时甚至出现「自己不清楚放在哪里，也不清楚是否有」的情况。记笔记花了一个小时，下次寻找与重新消化又耗费了一个小时，原本为效率而生的知识管理软件变成了时间杀手。</description>
      <category>博客</category>
      <category>头脑驿站</category>
      <pubDate>Mon, 22 Aug 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>知识管理/笔记软件越来越多，Notion、Obsidian、Logseq、Roam Research、Evernote、flomo、为知、飞书、语雀……我总在不同应用间徘徊。直到有一次，我突然醒悟：知识管理软件不是管理知识，而是管理笔记。<strong>笔记里的知识并不属于你，只有经过消化、应用，才能成为自己的知识。</strong></p>
<p>这么简单的事，我之前却一直没看透，总是把笔记与知识理解划上了等号。当要用到曾摘录的笔记时，就在各类知识管理软件里翻找，折腾一番才找到需要的笔记，有时甚至出现「自己不清楚放在哪里，也不清楚是否有」的情况。记笔记花了一个小时，下次寻找与重新消化又耗费了一个小时，原本为效率而生的知识管理软件变成了时间杀手。</p>
<p>另一方面，我们在使用知识管理软件的美观界面和强大功能的同时，也被这些软件所限制，无法完全按照自己的想法输出笔记。比如，你有了一双翅膀，<strong>Markdown 文本是自由的天地，而进入 Notion 则被隔成一个个小房间</strong>，你在房间里待着很舒服，可一旦想去其他房间，就必须脱离 block，不比 Markdown 可以自由飞翔。</p>
<figure><img src="https://tc.seoipo.com/2022-08-22-18-02-07.png" alt="" tabindex="0" loading="lazy"><figcaption>Markdown VS Notion</figcaption></figure>
<p>突破迷思后，我基于 VuePress 和 vuepress-theme-hope 建立了 <a href="https://github.com/rockbenben/LearnData" target="_blank" rel="noopener noreferrer">LearnData</a> 项目，将知识笔记、生活记录、博客和任何认为有价值的记录转换为 Markdown 文本，然后推送到 GitHub 生成 Pages 静态页面，并同步到国内云服务器，形成 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData - 开源笔记</a>。</p>
<figure><img src="https://tc.seoipo.com/2022-08-24-19-14-59.png" alt="" tabindex="0" loading="lazy"><figcaption>笔记/博客自动化发布</figcaption></figure>
<p>LearnData 的笔记和文章格式是 Markdown，输出不受到应用的局限。LearnData 看起来像由文章组成的博客，但它的笔记是独立的知识点，是所有知识的终点站，是整理后的知识库。通过 LearnData 可以搜索和整理知识，不再需要来回翻找。把博客转为知识库后，我明显感到学习和知识使用的效率得到提高，开始摆脱「工具奴隶」和「效率中毒」陷阱。</p>
<figure><img src="https://tc.seoipo.com/2022-08-22-19-28-25.png" alt="" tabindex="0" loading="lazy"><figcaption>笔记 + 文章 = LearnData 知识库</figcaption></figure>
<h2> 为什么用网页管理笔记</h2>
<h3> 公开想法</h3>
<p>知识管理/笔记软件具有天然的私密性，不对外公开。但是，我的笔记大部分来自互联网，需要对谁保密？</p>
<p>我非常赞同 Ray Dalio 在《原则》中提到的「头脑极度透明，公开分享想法」。</p>
<blockquote>
<p>让其他人无比清晰地看到你在做什么、为什么这么做。头脑越透明，越不会自欺，其他人也会给你诚实的反馈。</p>
</blockquote>
<p>作为国内最早一批介绍 Aria2 的人，我曾经写过一篇 Aria2 教程。文章后来被多个网站参考/抄袭，覆盖了 Aria2 某度搜索前三页。在那篇文章的评论区，有好几条留言批评文章逻辑差看不懂的，经常有热心人帮我怼回去。其实，那篇文章的初版真的很糟糕。那篇文章是在大家的反馈下，迭代了三个版本才开始变得完整和逻辑化。这些反馈也是我坚持写博客的原动力。这跟费曼学习法的道理相通，当你写文章帮助其他人时，你也在加深自己对知识的理解。建立 LearnData 不到一个月，但我从中获取的正反馈已超过私有笔记一年的收获。笔记公开化是有百利而无一害。</p>
<h3> 输出分享</h3>
<p>其次，网页形式使笔记更容易分享。除了效率工具的心得，我还在 LearnData 上放置了生活技巧、购物评价和说明书。当家人或朋友需要帮助时，可以直接访问网页，无需安装应用程序或折腾账户分享，比如我经常分享的<a href="https://newzone.top/family/Maintenance.html#%E9%80%9A%E9%A9%AC%E6%A1%B6" target="_blank" rel="noopener noreferrer">通马桶技巧</a> 和疏通器说明书。</p>
<figure><img src="https://tc.seoipo.com/2022-08-19-22-52-29.png" alt="" tabindex="0" loading="lazy"><figcaption>生活知识页面样例</figcaption></figure>
<h3> 被动消化知识</h3>
<p>如果只是公开分享，LearnData 与笔记软件并无区别，它的优点更在于网页有限的笔记数量。虽然网页可以无限地存放笔记，但打开页面只能看到少量的几十篇内容。一旦笔记堆积过多，你就像触发了整理开关似的，对笔记开始消化重构。这就是网页容量上的无限性和视觉/直觉上的有限性，存储是无限但视觉上只能有很小的一块。这里的直觉指，看一眼界面就能找到所需知识点的效果。</p>
<p>比如，当我的代码区块笔记存放超过 10 篇时，每次查找代码笔记都需要 10 选 1，知识查找时间也翻倍了。我意识到节点过多，不能让自己将时间花在查询上。因此，我将代码笔记分为 Basic 和 FrontEnd 两块，总结划分的同时，编程知识也再次得到消化。</p>
<p>而网页与笔记软件的区别也正在于此，LearnData 的主页、侧边栏和导航栏就是能展示的路径，你必须不断对笔记提纯才能提高使用率。否则，如果你只是「积累」笔记而非消化知识，无论使用什么工具和方法，成效都是 0。</p>
<h3> 漂亮决定生产力</h3>
<p>另外，网页可以自由调整外观样式，更换为你喜欢的界面。这也是为什么 LearnData 放弃了初版的 docsify 框架，改为复杂得多的 VuePress 框架。docsify 的官方模板太过简单，没有界面设计模块，难以满足知识管理界面必须直观漂亮的要求，而这一点直接决定了生产力，不能让步。</p>
<p>知识管理/笔记软件将 Markdown 文件作为一个个区块，而网页可以将其视为一体。LearnData 支持多级侧边栏和目录，让阅读和查找变得更加简单。</p>
<figure><img src="https://tc.seoipo.com/2022-08-19-22-42-03.png" alt="" tabindex="0" loading="lazy"><figcaption>LearnData 页面布局</figcaption></figure>
<h2> 为什么不用 Obsidian</h2>
<p>@北鸮 提到「脱离 Notion 可以理解，Markdown 很自由，那为啥不用 Obsidian 呢？也有标题，也有标签，也可以有层级，开源软件还有 Logseq 替代」。</p>
<p>Obsidian 等双链笔记的设计初衷很好，可以让我们自由地在不同知识点间切换，节省搜索和关联的时间。但是，知识点的联系是靠人工打标签来建立的，而不是根据关键词自动建立图谱关系，这与 URL 链接有什么区别？因此，我认为<strong>双链笔记并不适合知识库</strong>（如果对双链笔记理解有误，欢迎纠正）。</p>
<figure><img src="https://tc.seoipo.com/2022-08-19-21-39-41.png?imageMogr2/thumbnail/!60p" alt="" tabindex="0" loading="lazy"><figcaption>我的 Obsidian 图谱，只有右下角简悦抓取的素材有相同标签而聚作一团</figcaption></figure>
<p>建立知识点联系后，双链笔记可以轻松处理成千上万个文档，按条件整合文本，便于阅读。但是，大多数人常用的知识范围不会超过一百。如果你的个人笔记超过千篇，要么你是科研大佬，要么你没有消化这些笔记，只是在记笔记。</p>
<p>除了博客，我只有 37 篇笔记，而且按功能划分为 7 个区块。你觉得这点文件，用树状管理方便，还是用双链笔记打一堆标签来得好？即使有时标题里找不到某个关键词，我也可以用全文搜索达到目的。我个人会倾向于简单方便的树状标题管理。</p>
<h2> 抛弃知识软件 ≠ 不用</h2>
<p>选择 Markdown 就得卸载知识软件吗？</p>
<p>抛弃知识软件并不是不用，而是将其视为知识的中转站。知识软件的趋势是 ALL IN ONE，记录全能成了标榜的主打功能。但是，<strong>光收集而不应用的知识等于零</strong>，只会增加你后续的使用成本。</p>
<p>对我来说，知识软件是功能清晰的素材库。我会不断清空素材库，将小的知识点融入 LearnData 笔记区，成体系内容则写成博客，以确保 LearnData 成为知识库的终点。</p>
<figure><img src="https://tc.seoipo.com/2022-08-21-21-38-47.png" alt="" tabindex="0" loading="lazy"><figcaption>知识类素材库</figcaption></figure>
<ul>
<li>Logseq 将信息节点化，能按日期整合文本，因此我用它来记录笔记，并定期生成周报和月报回顾。</li>
<li>飞书文档自带侧边目录栏，对长文档优化很好，因此我用它记录工作心得，定期形成工作流程并在公司分享。</li>
<li>WonderPen 带多层级标题，当一点头绪方向都没有时，素材就可以直接放这里。</li>
<li>Notion 貌似全能，但其可替代性也最高，知识库迁移到 LearnData 后，Notion 仅用来存放涉及个人信息和不方便转移的旧文档。</li>
<li>Airtable 表格功能最强，虽然已经被其他软件赶上，但前期存储的大量数据仍然放在这里。</li>
<li>SuperMemo 与 Anki 功能类似，可以帮助定期复习需要重复记忆的知识点。</li>
</ul>
<p>而对于 Obsidian，我将其视为笔记的备份站。通过 GoodSync，LearnData 笔记发生修改后，相关更新会实时同步到 Obsidian，完成笔记的备份。期待有一天 Obsidian 完善双链功能，帮助笔记自动打上标签，到时备份笔记就能正式使用，我也能无缝切换到新的知识管理应用。</p>
<h2> 如果你也想试试……</h2>
<p>如何把博客转换为知识库，建立属于你的 LearnData 知识管理网站？</p>
<p>首先，确保你有 GitHub 账号，懂 Markdown 和基础 HTML 知识。然后，按照 <a href="https://newzone.top/#%F0%9F%94%A3-%E9%85%8D%E7%BD%AE-learndata" target="_blank" rel="noopener noreferrer">LearnData 部署教程</a>完成搭建和配置。如果你的笔记已经用 Markdown 格式编写，只需把文档放在 docs 目录下，就可以建立自己的知识库。</p>
<p>笔记结构可以参考我的分类。这没有绝对的界限，只要看到自己觉得有价值的知识点，都可以往 LearnData 里添加。但是，不要全文本地化收藏，简单提取用链接引用即可。除少量精品外，网络时代的文章隔几年就会失效，没必要收藏为一篇篇的笔记。当下次需要使用这个知识点时，再考虑整理事宜，否则，长时间用不到的知识，又有什么整理的价值呢。</p>
<ul>
<li>置顶：日常习惯、健身、阅读；</li>
<li>代码：常用代码的学习和使用笔记；</li>
<li>软件应用：常用应用、Chrome 扩展和相关教程；</li>
<li>页面开发：页面插件和框架生成工具；</li>
<li>网站部署：网站相关的工具和知识收集；</li>
<li>Linux 服务：NAS 和服务器上的后端应用，主要以 Docker 方式部署；</li>
<li>系统问题：Windows 系统优化和相关问题；</li>
<li>生活区：说明书、生活记录和小技巧；</li>
<li>博客区：聚合所有博客文章，以分类、标签、时间轴等方式进行组合。</li>
</ul>
<h2> 最后</h2>
<p>两个月前，我在 WordPress 博客篇中喊着「md2wordpress 是最后一次博客方案」，但由于 WordPress 与 Markdown 各种不兼容，写完没多久就换到支持原生 Markdown 解析的 VuePress。</p>
<p>这次我不想再立 Flag 了，只希望能放过自己。每进行一次知识迁移，真是大伤，休息一段时间吧。</p>
<p>如果你有兴趣尝试 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData</a>，欢迎通过链接访问并复制模板尝试。具体的操作方法与常见问答我都写在博客中。如果有进一步的问题或讨论，欢迎在评论区留言。</p>
]]></content:encoded>
    </item>
    <item>
      <title>零基础入门 Stable Diffusion - 无需显卡把 AI 绘画引擎搬进家用电脑</title>
      <link>https://www.anango.cn/posts/2022-09-05-stable_diffusion_ai_painting.html</link>
      <guid>https://www.anango.cn/posts/2022-09-05-stable_diffusion_ai_painting.html</guid>
      <source url="https://www.anango.cn/rss.xml">零基础入门 Stable Diffusion - 无需显卡把 AI 绘画引擎搬进家用电脑</source>
      <description>我从小特别羡慕会画画的伙伴。他们能够将心中的想法画出来，而我最高水平的肖像画是丁老头。但在接触 Stable Diffusion 之后，我感觉自己脱胎换骨，给自己贴上了「会画画」的新标签。 丁老头进化旅程 Stable Diffusion 是一个「文本到图像」的人工智能模型，也是唯一一款开源且能部署在家用电脑（对硬件要求不高）上的 AI 绘图工具。使用 Stable Diffusion，你可以在拥有 6GB 显存显卡，16GB 内存或只依赖 CPU 的电脑上生成图像，并且仅需几秒钟的时间，无需进行预处理或后处理。</description>
      <category>工具</category>
      <pubDate>Mon, 05 Sep 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>我从小特别羡慕会画画的伙伴。他们能够将心中的想法画出来，而我最高水平的肖像画是丁老头。但在接触 Stable Diffusion 之后，我感觉自己脱胎换骨，给自己贴上了「会画画」的新标签。</p>
<figure><img src="https://tc.seoipo.com/2022-09-04-11-53-20.png" alt="" tabindex="0" loading="lazy"><figcaption>丁老头进化旅程</figcaption></figure>
<p>Stable Diffusion 是一个「文本到图像」的人工智能模型，也是唯一一款开源且能部署在家用电脑（对硬件要求不高）上的 AI 绘图工具。使用 Stable Diffusion，你可以在拥有 6GB 显存显卡，16GB 内存或只依赖 CPU 的电脑上生成图像，并且仅需几秒钟的时间，无需进行预处理或后处理。</p>
<p>想要体验 AI 绘图，你可以使用在线工具 <a href="https://huggingface.co/spaces/stabilityai/stable-diffusion" target="_blank" rel="noopener noreferrer">Hugging Face</a>、<a href="https://beta.dreamstudio.ai/" target="_blank" rel="noopener noreferrer">DreamStudio</a> 或<a href="https://wenxin.baidu.com/moduleApi/ernieVilg" target="_blank" rel="noopener noreferrer">百度文心</a>。但相对于本地部署来说，Hugging Face 需要排队，生成一张图约 5 分钟；DreamStudio 可以免费生成 200 张图片，之后需要缴费；百度文心能用中文生成图片，但仍处于 beta 阶段，未正式商用。此外，这些在线工具的图片调整功能比较有限，无法批量生成图片，只适用于测试和体验。</p>
<p>如果你需要生成大量的 AI 图片，可以通过 Docker Desktop 将 <a href="https://github.com/AbdBarho/stable-diffusion-webui-docker" target="_blank" rel="noopener noreferrer">Stable Diffusion WebUI Docker</a> 部署到家用电脑上，从而实现免费的 AI 文字绘画，并摆脱在线工具的限制。对于 Mac 用户，推荐选择 Stable Diffusion 的 invoke 分支，如果在部署过程中出现错误，你可以参考 <a href="https://github.com/invoke-ai/InvokeAI/blob/main/docs/installation/INSTALL_MAC.md#doesnt-work-anymore" target="_blank" rel="noopener noreferrer">InvokeAI 文档</a>进行排查。对于 M1/M2 Mac 用户，推荐使用更简便的 <a href="https://www.charl-e.com/" target="_blank" rel="noopener noreferrer">CHARL-E</a> 或 <a href="https://sspai.com/post/75682" target="_blank" rel="noopener noreferrer">DiffusionBee</a>。</p>
<figure><img src="https://tc.seoipo.com/2022-09-05-16-22-45.png" alt="" tabindex="0" loading="lazy"><figcaption>Stable Diffusion 部署流程</figcaption></figure>
<p>以 Windows 平台为例，本文将依次介绍 Docker 环境配置、Stable Diffusion 安装及基本使用方法。</p>
<h2> Docker 环境配置</h2>
<p>本方案基于 Docker 配置，Docker 实质上是在运行的 Linux 系统中创建了一个隔离的文件环境。因此，Docker 必须部署在基于 Linux 内核的系统上。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"> 对于 Mac 用户，无需特别配置即可使用。而对于 Windows 用户，若想部署 Docker，则需要安装一个虚拟 Linux 环境，<strong>配置 WSL 或启用 Hyper-V 二选一</strong>。我推荐使用 Windows 子系统 WSL，它需要占用系统盘 30G 的空间。</a></p><a class="footnote-anchor" id="footnote-ref1">
</a><h3><a class="footnote-anchor" id="footnote-ref1"></a> 安装 WSL</h3>
<p>在管理员 PowerShell 输入命令 <code>wsl --install</code>，之后终端会默认安装 Ubuntu。系统下载时间较长，注意别关机。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup><a class="footnote-anchor" id="footnote-ref2"> 安装 Ubuntu 完成后，按提示设置 Ubuntu 账户和密码。</a></p><a class="footnote-anchor" id="footnote-ref2">
</a><h3><a class="footnote-anchor" id="footnote-ref2"></a> 启用 Hyper-V</h3>
<p>以管理员身份打开 PowerShell 控制台，输入命令 <code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All</code>。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup><a class="footnote-anchor" id="footnote-ref3"> 重启电脑后，将开启 Hyper-V。</a></p><a class="footnote-anchor" id="footnote-ref3">
</a><h3><a class="footnote-anchor" id="footnote-ref3"></a> Linux 路径（Windows）</h3>
<p>配置 WebUI Docker 要进入 Linux 环境，因此 Windows 用户需要将其路径转换为 Linux 路径。而 Mac 和 Linux 用户则可以忽略此步骤。</p>
<p>假设容器位于 <code>D:\Desktop\stable-diffusion-webui-docker</code>：</p>
<ol>
<li>把磁盘符号改为小写，转换为 <code>d:\Desktop\stable-diffusion-webui-docker</code></li>
<li>添加 <code>/mnt/</code> 前缀，转换为 <code>/mnt/d:\Desktop\stable-diffusion-webui-docker</code>。因为 Windows 本地磁盘是挂载在 Linux 的 mnt 目录下的。</li>
<li>将反斜扛 <code>\</code> 替换为 <code>/</code>。最终得到 Linux 路径 <code>/mnt/d:/Desktop/stable-diffusion-webui-docker</code>。</li>
</ol>
<h2> 配置 Stable Diffusion</h2>
<h3> 安装 Docker Desktop</h3>
<p>按平台选 <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener noreferrer">Docker Desktop</a> 版本，安装后点击左侧的 Add Extensions，推荐安装 Disk usage 扩展，这将便于管理 Docker 的存储空间。</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>Docker Desktop 4.17.1 存在 bug，可能会导致 <code>Attaching to webui-docker-auto-1</code> 报错。建议使用 Docker Desktop 4.17.0 或更早版本。</p>
</div>
<h3> 下载 WebUI Docker</h3>
<p>下载 <a href="https://github.com/AbdBarho/stable-diffusion-webui-docker/releases/" target="_blank" rel="noopener noreferrer">Stable Diffusion WebUI Docker 配置包</a>或<a href="https://www.aliyundrive.com/s/EKmK7MGrHdn" target="_blank" rel="noopener noreferrer">阿里云盘聚合版</a>（定期更新），然后将其解压到指定路径。聚合版包括相关依赖和模型，因此文件较大。如果需要更新 Stable Diffusion WebUI Docker，你可以按照上述步骤重新构建容器。</p>
<h3> 分支介绍</h3>
<p>目前，Stable Diffusion 有 sygil、auto、auto-cpu 和 invoke 四个分支。如果需要更换分支，可以修改镜像构建命令 <code>docker compose --profile [ui] up --build</code> 中的 <code>[ui]</code>，将其替换为所需的镜像名即可。原先的 <code>hlky</code> 分支已经更名为 <code>sygil</code>，<code>lstein</code> 分支更名为 <code>invoke</code>。</p>
<ul>
<li><strong>sygil</strong>：界面直观，最高分辨率为 1024x1024，镜像构建命令为 <code>docker compose --profile sygil up --build</code>。</li>
<li><strong>auto</strong>（推荐）：设置模块最丰富，显示绘画过程，支持随机插入艺术家、参数读取和否定描述，最高分辨率为 2048x2048（高分辨率对显存要求更高），镜像构建命令为 <code>docker compose --profile auto up --build</code>。默认使用 6GB 以上的显存，如果你的显卡内存较低，则将配置中的 <code>--medvram</code> 改为 <code>--lowvram</code>。A 卡用户注意修改<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-AMD-GPUs#running-inside-docker" target="_blank" rel="noopener noreferrer">显卡设置</a>。</li>
<li><strong>auto-cpu</strong>：唯一不依赖显卡的分支。如果没有符合要求的显卡，可以使用 CPU 模式，内存配置需满足 16G 以上，构建镜像的命令为 <code>docker compose --profile auto-cpu up --build</code>。</li>
<li><strong>invoke</strong>：cli 端非常成熟，WebUI 端参数较少，能自动读取图片记录，适合无进阶需求的新手和 Mac 用户使用，镜像构建命令为 <code>docker compose --profile invoke up --build</code>。</li>
</ul>
<h3> 构建 Stable Diffusion</h3>
<p>在启动 Docker Desktop 后，打开 WSL（Ubuntu）或 Mac 终端，输入路径切换命令 <code>cd /mnt/d/Desktop/stable-diffusion-webui-docker</code>（路径为 Stable Diffusion WebUI Docker 解压文件目录）。接着，输入以下的部署命令：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://tc.seoipo.com/2022-09-04-18-32-31.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>等待构建完成后，在终端中会提示访问 <code>http://localhost:7860/</code>，你就可以在本地电脑上用 AI 生成图片了。<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><a class="footnote-anchor" id="footnote-ref4">
</a><h2><a class="footnote-anchor" id="footnote-ref4"></a> 使用说明</h2>
<p>以下示例以 sygil 分支为例，其他分支的主题界面略有不同，但在功能上并没有根本性的差异。</p>
<h3> 启动 Stable Diffusion</h3>
<ol>
<li>打开 Docker Desktop。</li>
<li>在 Containers 中选中分支容器，点击启动。</li>
<li>浏览器中访问 <code>http://localhost:7860/</code>。</li>
</ol>
<figure><img src="https://tc.seoipo.com/2022-09-04-17-06-27.png" alt="" tabindex="0" loading="lazy"><figcaption>Docker Desktop 界面</figcaption></figure>
<h3> Text-to-Image</h3>
<p>Text-to-Image 是 Stable Diffusion 依据文字描述来生成图像的方法。对于崇尚空间结构的画作类型，如风景、创意画等，推荐使用竖图或横图。对于人像类画作，推荐使用 1:1 的方形图像，否则可能会出现多个人脸叠加的情况。生成的图片分辨率受到一定限制，你可以使用 Upscale 对结果图片进行放大处理。</p>
<figure><img src="https://tc.seoipo.com/2022-09-05-08-28-23.png" alt="" tabindex="0" loading="lazy"><figcaption>Text-to-Image 界面</figcaption></figure>
<p>默认情况下使用的是 Simple 简单模式。如果你想要使用更多的功能，你可以点击右侧的 Advanced 按钮，进入进阶选项。在进阶选项中，你可以使用场景矩阵、面部修复和分辨率放大等多种高级功能。</p>
<h3> Image-to-Image</h3>
<p>Image-to-Image 是依据文字描述和输入源图来生成相关图像。如果输入源图是 Text-to-Image、素描或结构画，该模式可充分填充图像细节。而如果输入源图是细节充分的照片，生成的结果与原图差异较大。此外，你还可以限定区域来生成图像，这非常适合进行图像修改。</p>
<figure><img src="https://tc.seoipo.com/2022-09-04-15-39-00.png" alt="" tabindex="0" loading="lazy"><figcaption>Image-to-Image 界面</figcaption></figure>
<p>CLIP interrogator 会根据图像来生成文字描述。Denoising Strength 指与原图的差异度，建议设置在 0.75-0.9 之间。若要魔改图片，可将 Denoising Strength 设为 0.5 或以下。下图中的 Denoising Strength 只有 0.44，整体图片结构及要素未变，但结果如何，你看到了。</p>
<figure><img src="https://tc.seoipo.com/2022-09-04-15-40-26.png" alt="" tabindex="0" loading="lazy"><figcaption>超级魔改图片</figcaption></figure>
<p>Image-to-Image 还可以用来移除、替换或修复图像，甚至可以将源图作为结果图的一部分，利用 Stable Diffusion 扩展绘画。</p>
<h3> Image Lab</h3>
<p>Image Lab 有批量修正面孔和放大图片分辨率的功能。</p>
<p>Fix Faces 是通过 GFPGAN 模型来改善图片中的面孔，Effect strength 滑块可以控制效果的强度。但实际效果别报太高期许，下图右侧开启了 Fix Faces，只能说勉强有了五官。</p>
<figure><img src="https://tc.seoipo.com/2022-09-04-15-47-14.png" alt="" tabindex="0" loading="lazy"><figcaption>A woman flying in the air laughing</figcaption></figure>
<p>Upscale 可以通过 RealESRGAN、GoBIG、Latent Diffusion Super Resolution 和 GoLatent 四种模型来放大图片分辨率。其中，RealESRGAN 有普通和卡通两种模式，你可以根据需要进行选择。放大图片主要消耗 CPU 和内存资源。</p>
<h2> 参数解释</h2>
<h3> Classifier Free Guidance</h3>
<p>Classifier Free Guidance (CFG) 的默认值为 7。数字越小，创作自由度越高，模型与 Prompt 相关性越低。CFG 参数不影响所需的 VRAM 或生成时间。</p>
<ul>
<li>CFG 2-6：虽然有创意，但可能不符合提示。</li>
<li>CFG 7-10：这些提示适用于大多数情况，既富有创意又具有指导性。</li>
<li>CFG 10-15：当你确信 Prompt 足够好、足够具体时可以使用。</li>
<li>CFG 16-20：除非提示非常详细，否则不建议使用。这可能会影响连贯性和质量。</li>
</ul>
<h3> Step</h3>
<p>Step（采样步长/精度）的默认值为 50。Stable Diffusion 通过充满噪音的画布开始创建图像，并逐步去噪以达到最终输出。Step 参数控制这些去噪步骤的数量。通常情况下，越高越好。对于初学者来说，建议使用默认值。Step 参数不影响所需的 VRAM，但 Step 数值的变化会与生成图像的时间成正比。</p>
<h3> Seed</h3>
<p>Seed（种子）的默认值为 -1，代表随机值。Seed 是控制初始噪声的数字，在其他参数固定的情况下，每次生成的图像都会不同，这就是种子的作用。如果你保持提示、种子和所有其他参数不变，你可以得到相同的结果。如果一个 Seed 生成了高质量图片，保存该 Seed 并将其应用到其他图片上，以保持高质量。</p>
<h3> Sampler</h3>
<p>Sampling method/Diffusion Sampler（扩散采样器）是用来在生成图像过程中对图像进行去噪的方法。由于不同的扩散采样器在计算图像下一步的方式不同，因此它们需要不同的持续时间和步骤来生成可用的图像。建议初学者使用 DDIM，因为它速度快，通常只需要 10 步就能生成好的图像，因此可以很容易和快速地进行试验和改进。</p>
<h2> 文字描述图像</h2>
<p>Stable Diffusion 通过英文文字内容来描述场景或物体，以此来决定生成的图像中会出现什么。文字描述是决定图像生成质量的关键因素。<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup></p><a class="footnote-anchor" id="footnote-ref5">
</a><p><a class="footnote-anchor" id="footnote-ref5">样例：<code>A beautiful painting {画作种类} of a singular lighthouse, shining its light across a tumultuous sea of blood {画面描述} by greg rutkowski and thomas kinkade {画家/画风}, Trending on artstation {参考平台}, yellow color scheme {配色}</code>。<sup class="footnote-ref"></sup></a><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></p><a class="footnote-anchor" id="footnote-ref6">
</a><h3><a class="footnote-anchor" id="footnote-ref6"></a> 常规描述</h3>
<ol>
<li>输入图像的对象、主体，比如一只熊猫、一个持剑的战士，<strong>不要描述动作、情绪和事件</strong>；<sup class="footnote-ref"><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></sup></li><a class="footnote-anchor" id="footnote-ref7">
<li><strong>图像种类</strong>：一幅画（a painting of + raw prompt）还是一张照片（a photograph of + raw prompt），或者 Watercolor（水彩）、Oil Paint（油画）、Comic（漫画）、Digital Art（数码艺术）、Illustration（插画）、realistic painting（写实画）、photorealistic（写实照片）、Portrait photogram（肖像照）、Low Poly（低面建模）、3D Item Rende（三维渲染）、sculpture (雕塑) 等等，图像种类可以叠加。</li>
<li><strong>画家/画风</strong>：建议混合多个画家的风格，比如 <code>Studio Ghibli, Van Gogh, Monet</code>，或描述风格种类，比如 <code>very coherent symmetrical artwork</code>，将作品结构设为「连贯且对称」。</li>
<li><strong>色调</strong>：yellow color scheme 指整个画面的主色调为黄色。</li>
<li><strong>参考平台</strong>：Trending on ArtStation，也可以替换为「Facebook」「Pixiv」「Pixbay」等。
<img src="https://tc.seoipo.com/2022-09-16-22-33-26.png" alt="" title="相同参数下，不同平台生成的图片" loading="lazy"></li>
</a></ol><a class="footnote-anchor" id="footnote-ref7">
</a><h3><a class="footnote-anchor" id="footnote-ref7"></a> 特征描述</h3>
<p>除画面主体外，可以用其他具象物体和形容词来填充画面细节。描述词要具体，讲出你要的物体和它的特征。</p>
<ul>
<li>次要元素：物体不要太多，两到三个就好。若要特别强调某个元素，可以加很多括号或者惊叹号，比如 <code>beautiful forest background, desert!!, (((sunset)))</code> 中会优先体现「desert」和「sunset」元素。</li>
<li>人物特征：<code>detailed gorgeous face, delicate features, elegant, Googly Eyes, Bone, big tits, silver hair, olive skin, Mini smile</code>；</li>
<li>特定润色：<code>insanely detailed and intricate, gorgeous, surrealism, smooth, sharp focus, Painting, Digital Art, Concept Art, Illustration, Artstation, in a symbolic and meaningful style, 8K</code>；</li>
<li>光线描述：<code>Natural Lighting, Studio lighting, Cinematic Lighting, Crepuscular Rays, X-Ray, Backlight</code>，或逼真光照 <code>Unreal Engine</code>；</li>
<li>镜头视角：<code>Cinematic, Magazine, Golden Hour, F/22, Depth of Field, Side-View</code>，虚化背景 <code>Bokeh</code>；</li>
<li>画面质量：<code>professional, award winning, breathtaking, groundbreaking, superb, outstanding</code>；</li>
<li>其他描述：细节和纹理、物体占据画面的大小、年代、渲染 / 建模工具等，比如 Vivid Colors（艳丽色彩）。</li>
</ul>
<h3> prompt 权重</h3>
<p>假设你在提示词中使用了 <code>mountain</code>，生成的图像很可能会有树。但如果你想要生成没有树的山的图像，可以使用 <code>mountain | tree:-10</code>。其中 <code>tree:-10</code> 表示对于树的权重非常负，因此生成的图像中不会出现树。通过权重词，我们还能生成更复杂的图像，例如 <code>A planet in space:10 | bursting with color red, blue, and purple:4 | aliens:-10 | 4K, high quality</code>。<sup class="footnote-ref"><a href="#footnote8">[8]</a><a class="footnote-anchor" id="footnote-ref8"></a></sup></p><a class="footnote-anchor" id="footnote-ref8">
<p>Prompt 中的词语顺序代表其权重，越靠前权重越大。如若某物未出现在图像中，可以将该名词放在首位。</p>
</a><h3><a class="footnote-anchor" id="footnote-ref8"></a> 否定提示</h3>
<p>auto/auto-cpu 分支中可以设置 Negative prompt（否定提示），以避免画面中出现指定元素。</p>
<ul>
<li>修正畸形：<code>disfigured, deformed hands, blurry, grainy, broken, cross-eyed, undead, photoshopped, overexposed, underexposed, lowres, bad anatomy, bad hands, extra digits, fewer digits, bad digit, bad ears, bad eyes, bad face, cropped: -5</code>。</li>
<li>避免裸体：<code>nudity, bare breasts</code>。</li>
<li>避免黑白照：<code>black and white,monochrome</code>。</li>
</ul>
<h3> prompt 参考</h3>
<p>除画面主体描述外，其他要素并非必须。如果你只是简单尝试，输入主体「apples」即可。</p>
<p>如果你不知道生成什么图像，可以使用 <a href="https://promptomania.com/stable-diffusion-prompt-builder/" target="_blank" rel="noopener noreferrer">promptoMANIA</a> 、<a href="https://weirdwonderfulai.art/resources/disco-diffusion-modifiers/" target="_blank" rel="noopener noreferrer">WEIRD WONDERFUL AI ART</a> 按提示组合描述，或参考 AI 图库 <a href="https://prompthero.com/" target="_blank" rel="noopener noreferrer">PromptHero</a> 和 <a href="https://openart.ai/" target="_blank" rel="noopener noreferrer">OpenArt</a> 上其他人分享的成品图和描述文案，比如</p>
<blockquote>
<p>goddess close-up portrait skull with mohawk, ram skull, skeleton, thorax, x-ray, backbone, jellyfish phoenix head, nautilus, orchid, skull, betta fish, bioluminiscent creatures, intricate artwork by Tooth Wu and wlop and beeple, highly detailed, digital painting, Trending on artstation, very coherent symmetrical artwork, concept art, smooth, sharp focus, illustration, 8k</p>
</blockquote>
<h2> Prompt matrix</h2>
<p>Prompt matrix 是 sygil 分支的功能，可以按不同条件组合生成多张相关但不同的画面，适合用于制作视频素材。<sup class="footnote-ref"><a href="#footnote9">[9]</a><a class="footnote-anchor" id="footnote-ref9"></a></sup><a class="footnote-anchor" id="footnote-ref9"> 此时，批次数量的设置会被忽略。如果你对将图像转化为视频有兴趣，可以尝试使用 </a><a href="https://github.com/HelixNGC7293/DeforumStableDiffusionLocal" target="_blank" rel="noopener noreferrer">Deforum Stable Diffusion Local Version</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>为了帮你用好 ChatGPT，我做了一个「咒语库]</title>
      <link>https://www.anango.cn/posts/2023-02-27-chatgpt_shortcuts.html</link>
      <guid>https://www.anango.cn/posts/2023-02-27-chatgpt_shortcuts.html</guid>
      <source url="https://www.anango.cn/rss.xml">为了帮你用好 ChatGPT，我做了一个「咒语库]</source>
      <description>最近，关于 ChatGPT 的讨论越来越多，但大多数人仅仅将其视为一款聊天机器人，并从猎奇的角度去测试其人工智能的回答。然而，ChatGPT 不仅仅是一个猎奇的 AI 玩具，未来它将会成为必备生产工具。ChatGPT 之类的 AI 工具将用它巨大的语言知识库，为我们创造更多的价值。 ChatGPT 的回复质量取决于提示词（即 Prompt）。这通常是用户提供的问题或文本，以激活模型生成回复。简单来说，prompt 就是用户想要询问的内容，作为输入送到 ChatGPT 中，ChatGPT 会尝试理解这个输入，然后输出合适的回答或响应。通过优化提示词，可以使 ChatGPT 生成更加准确、有用的回复。为了能让 ChatGPT 成为生产力工具，我花大量时间逐个研究提示词的规则和范例，如 ChatGPT Prompt Examples、Awesome ChatGPT Prompts、Learn Prompting 等。我筛选出了 163 个 Prompts（提示词），仅记录它们的功能而非内容，这就让我的笔记超过了 5000 字。提示词目录也变得越来越长，即使将浏览器全屏，也无法完整显示。起初，我制作提示词目录是为了方便自己，但每次需要查找提示词时，我不得不依靠记忆。这些笔记反而成为了负担，拖累 ChatGPT 的工作效率。</description>
      <category>工具</category>
      <pubDate>Mon, 27 Feb 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>最近，关于 ChatGPT 的讨论越来越多，但大多数人仅仅将其视为一款聊天机器人，并从猎奇的角度去测试其人工智能的回答。然而，ChatGPT 不仅仅是一个猎奇的 AI 玩具，未来它将会成为必备生产工具。ChatGPT 之类的 AI 工具将用它巨大的语言知识库，为我们创造更多的价值。</p>
<p>ChatGPT 的回复质量取决于提示词（即 Prompt）。这通常是用户提供的问题或文本，以激活模型生成回复。简单来说，prompt 就是用户想要询问的内容，作为输入送到 ChatGPT 中，ChatGPT 会尝试理解这个输入，然后输出合适的回答或响应。通过优化提示词，可以使 ChatGPT 生成更加准确、有用的回复。为了能让 ChatGPT 成为生产力工具，我花大量时间逐个研究提示词的规则和范例，如 <a href="https://platform.openai.com/examples" target="_blank" rel="noopener noreferrer">ChatGPT Prompt Examples</a>、<a href="https://github.com/f/awesome-chatgpt-prompts" target="_blank" rel="noopener noreferrer">Awesome ChatGPT Prompts</a>、<a href="https://learnprompting.org/" target="_blank" rel="noopener noreferrer">Learn Prompting</a> 等。我筛选出了 163 个 Prompts（提示词），仅记录它们的功能而非内容，这就让我的笔记超过了 5000 字。提示词目录也变得越来越长，即使将浏览器全屏，也无法完整显示。起初，我制作提示词目录是为了方便自己，但每次需要查找提示词时，我不得不依靠记忆。这些笔记反而成为了负担，拖累 ChatGPT 的工作效率。</p>
<p>为了更好地使用 ChatGPT，我将精选的提示词编入索引，根据领域和功能对其进行分类，添加针对提示词的标签筛选、关键词搜索、一键复制和中英文切换功能，创建了 ChatGPT Shortcut 项目。即使是初学者，你只需<strong>打开 <a href="https://ai.newzone.top" target="_blank" rel="noopener noreferrer">ChatGPT Shortcut</a>，复制提示词，稍加修改后发送给 ChatGPT</strong>，就能获得指定输出，让你的生产力加倍！</p>
<h2> 使用说明</h2>
<p>ChatGPT Shortcut 页面默认显示全部的提示词，页面分为标签区、搜索区和提示词展示区。</p>
<figure><img src="https://tc.seoipo.com/2023-02-28-10-30-20.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 标签筛选</h3>
<p>标签区按提示词的领域和功能进行划分，可根据不同场景和需求进行选择。与标签区右上方的「标签筛选规则切换」按钮配合使用，可进行多标签筛选。默认状态为 OR，即选中标签下的所有提示词。切换到 AND 后，将筛选出具备已选中的多个标签的提示词。</p>
<figure><img src="https://tc.seoipo.com/2023-02-28-10-31-01.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 关键词搜索</h3>
<p>关键词搜索范围包括提示词的标题、简介、内容和中文翻译。输入关键词后，提示词展示区将立即展示筛选出的内容。如果已选中标签，则关键词搜索仅限于标签筛选范围内。对于 PC 端，搜索框内容变化后，新的搜索结果会在 800 毫秒后显示。移动端则为即时刷新。</p>
<figure><img src="https://tc.seoipo.com/2023-02-28-10-31-10.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 展示区复制</h3>
<p>通过标签筛选和关键词搜索，点击卡片右上方的「复制」按钮即可获取提示词，将其粘贴到 ChatGPT 中，参考中文提示调整需求文本，即可得到指定领域的回复。如果提示词中的中文备注没有解释清楚，可以点击提示词的绿色标题查看来源网页。</p>
<figure><img src="https://tc.seoipo.com/2023-02-28-10-31-19.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 语言切换</h3>
<p>默认情况下，提示词内容会显示为英文。如果你想查看中文释义，可以点击提示词内容将其切换到中文，再次点击即可切回英文。请注意，语言切换只在文字上点击有效，点击空白区域无效。中文释义为机器翻译，仅供参考。</p>
<figure><img src="https://tc.seoipo.com/chatgptshortcut_encn.gif" alt="中英文切换" tabindex="0" loading="lazy"><figcaption>中英文切换</figcaption></figure>
<p>如果想让提示词默认显示为中文，你可以点击标签区右上方的 <code>CN</code> 按钮。需要注意的是，即使切换到中文翻译，复制按钮也仅针对英文提示词复制。下方会有解释原因。</p>
<h2> 常见问题</h2>
<h3> 为什么提示词用英文？</h3>
<p>ChatGPT Shortcut 是为方便中文母语人士使用 ChatGPT 而创建的，但是提示词却全部是英文。这是因为相较于中文，ChatGPT 对英文的理解更为出色。即使是国内第一个对话式大型语言模型 MOSS，也承认 MOSS 的英文回答水平比中文高，建议使用英文。（MOSS 已不对外开放）</p>
<p>使用中文提示词可能会得到不错的结果，但是当你再次输入相同的中文提示时，结果可能与之前大相径庭。因为 ChatGPT 对中文的理解每次都不同，所以建议大家在生产力型提示词的输入中使用英文提示词，以保证输出效果。此外，英文提示词带来的回复也很可能是英文的，你可以在提示词结尾添加 <code>respond in Chinese</code>，将回复指定为中文。</p>
<h3> 中文搜索出错</h3>
<p>搜索功能基于 Docusaurus 的 showcase，存在 PC 端中文输入法焦点丢失问题。向 Docusaurus 反馈后，对方表示会尝试修复和 <code>FWIW, you should not be using Chinese anyway, since the showcase is not localized</code>。但问题始终没有解决。</p>
<p>因此，我将搜索组件分为移动端和 PC 端两类。移动端搜索逻辑保持不变，而屏幕宽度阈值 768px 以上的 PC 端浏览引入 <code>debounce</code> 函数解决中文输入问题。但这在 PC 端产生两个问题：一是中文输入需在 800 毫秒内完成；二是 PC 端搜索刷新从即时变为 800 毫秒延迟。若你有更好的解决方案，欢迎提供反馈。</p>
<h3> 输出虚假信息</h3>
<p>ChatGPT 虽然非常强大，但并不是万能的。有时它会输出虚假信息。例如，当我需要将上百条信息录入到 ChatGPT Shortcut 中时，我让 ChatGPT 按指定格式转换数据。但是在转换过程中，我发现其中一些信息被 ChatGPT 误写。例如，在文本中一条标签是 <code>movie critic</code>，而 ChatGPT 将其更改为 <code>film critic</code>。尽管这在文本中不会造成什么影响，但放在代码中会报错。因此，在使用 ChatGPT 时，务必检查其输出内容。</p>
<h3> 提示词不好用</h3>
<p>所有提示词均来自互联网，会定期进行更新。虽然我测试过每一条提示词，但实际效果可能因需求而有所偏差。你可以参考页面和 <a href="https://platform.openai.com/examples" target="_blank" rel="noopener noreferrer">ChatGPT Prompt Examples</a> 进行调整。如果你发现任何错误、有创意的想法或有好的提示词，欢迎<a href="https://github.com/rockbenben/ChatGPT-Shortcut/discussions/11" target="_blank" rel="noopener noreferrer">反馈和投稿</a>。</p>
<p>此外，提示词不仅能用于工作生产，更重要的是帮助您开拓思路，发散思维，从多个角度考虑问题，并解决人们在思考时容易忽略的问题。</p>
<h2> 为什么执着于 ChatGPT？</h2>
<p>家人看到我每天把大量时间花在 ChatGPT，实际上并不能理解。因为这看起来跟我的工作关系不大。ChatGPT 帮我节省的时间远少于我的投入，帮我写的代码和文章都需要大幅修改，而查找的资料也基本上只是基础知识，而对于具体的问题我还需要去专业网站进行查询。那么，ChatGPT 究竟有什么用呢？等它成熟了再去使用不好吗？</p>
<p>但是，我们需要明确的是，使用 ChatGPT 等 AI 工具可以提高我们的工作效率和解放我们的时间，让我们可以更专注于创造性的工作和创新性的思考。比如，ChatGPT 在文章修订、语气转换、语音录入、代码解释、创意思维等方面已经成为我不可或缺的工具。虽然 ChatGPT 目前的功能和表现还有待提高和改进，但它毕竟是未来工具的一部分，是我们不断提高自己和适应未来的必要工具。我相信随着时间的推移，ChatGPT 的表现会越来越优秀，让我们的工作更高效，更具有创造性。</p>
<h2> 最后</h2>
<p>目前，ChatGPT 已经有 1 亿用户，但这仅仅是 80 亿人口中很小的一部分。无论你身处哪个行业，你使用 ChatGPT 都代表着你在行业前沿。尽管你可能认为这看起来似乎与你的行业无关，但使用它就代表着你比别人更早地迈出了这一步，可以探索更多的可能性。</p>
<p>我并不期待 ChatGPT Shortcut 成为完美的工具，而是希望它能为大家推开使用 AI 的一道门缝。我希望让更多人了解和使用 ChatGPT，摆脱对其聊天机器人的刻板印象，以提高工作效率。因为我相信，在未来，ChatGPT 和其他 AI 工具将扮演越来越重要的角色，成为我们生产力的强大工具。</p>
]]></content:encoded>
      <enclosure url="https://tc.seoipo.com/2023-02-28-10-30-20.png?imageMogr2/format/webp" type="image/"/>
    </item>
  </channel>
</rss>